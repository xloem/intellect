// make-random-code ...
// 1. generate-a-habit
//	need habit-that-makes-habits
//	need to structure args.  single concept with a number of information-order relations
// 2b randomly add arguments (random choice to add each time, random words from contextual set)
// 2. create a set-of-possible-next-steps
// 4. for each next-step, decide if it is a step, condition, jump, or end using random constants and presence of local values
// 5. add each next-step
// MISSING: I would like to be able to produce new global concepts in scripts and in habits, even
// if that means ensuring a habit is run at the start.
information make-random-code contextual-constants
when make-random-habit [
	set habit make-concept
	set args make-concept
	set constant-link random-link contextual-constants
	set-steps habit args
]

// add-a-condition(known-values, possible-next-steps):
//	1. pick a value to decide based on
//	2. randomly decide how many choices to make based on it
//	3. select choices from a contextual set of known values
//	4. add each choice to the set-of-possible-next-steps
// add-a-step:
//	1. pick a habit to add
//	2. enumerate needed information for the habit
//	3. for each needed information, pick random value

